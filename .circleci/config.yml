default: &defaults
  parallelism: 1
  working_directory: ~/my-project

k6_performance_tests: &k6_performance_tests
  run:
    name: Running k6 tests
    # Download the k6 docker image. Alternatively, download the k6 release binary
    # Mount a volume to access the folder and run the test
    # Remember to select container path for output file (since if we select host path, CI not have permission to write file from host)
    command: |
      docker pull loadimpact/k6:latest
      mkdir -p /results
      # docker run -i -v $HOME/my-project/tests:/tests \
      #   -v $HOME/my-project/results:/results \
      #   loadimpact/k6:latest run \
      #   --out json=/results/full.json \
      #   --summary-export=/results/summary.json \
      #   /tests/local.js
      docker run \
      -v $(pwd)/tests/local.js:/tests/local.js \
      -v /results:/results \
      loadimpact/k6:latest \
      run \
      --out json=/results/full.json \
      --summary-export=/results/summary.json \
      /tests/local.js

      
version: 2
jobs:
  run_performance_tests:
    <<: *defaults
    # Use `machine` executor because the Docker executor cannot mount volumes
    machine: true
    steps:
      - checkout
      - *k6_performance_tests
      - store_artifacts:
          path: /results/

workflows:
  version: 2
  build-and-test:
    jobs:
      - run_performance_tests
